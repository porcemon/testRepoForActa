name: Check TwinCAT Version (Split Jobs)

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  prepare:
    runs-on: windows-latest

    outputs:
      projectPath: ${{ steps.find_tsproj.outputs.projectPath }}

    steps:
      - name: Checkout current repo
        uses: actions/checkout@v4

      - name: Download script from ActaNonVerba
        shell: pwsh
        run: |
          Invoke-WebRequest `
            -Uri "https://raw.githubusercontent.com/porcemon/ActaNonVerba/refs/heads/main/.github/workflows/findXmlModuleWithAttribute.ps1" `
            -OutFile "findXmlModuleWithAttribute.ps1"

      - name: Upload script
        uses: actions/upload-artifact@v4
        with:
          name: check-script
          path: findXmlModuleWithAttribute.ps1

      - name: Find .tsproj file
        id: find_tsproj
        shell: pwsh
        run: |
          $proj = Get-ChildItem -Recurse -Filter *.tsproj | Select-Object -First 1
          if (-not $proj) {
            Write-Error "No .tsproj file found."
            exit 1
          }
          echo "::set-output name=projectPath::$($proj.FullName)"

  validate:
    runs-on: windows-latest
    needs: prepare

    strategy:
      matrix:
        check:
          - { tag: "TcSmProject", attribute: "TcVersion",       value: "3.1.4024.65" }
          - { tag: "TcSmProject", attribute: "TcVersionFixed",  value: "true" }
          - { tag: "Project",     attribute: "CopyTmcToTarget", value: "true" }

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download script artifact
        uses: actions/download-artifact@v4
        with:
          name: check-script

      - name: Run ${{ matrix.check.tag }} / ${{ matrix.check.attribute }}
        shell: pwsh
        run: |
          & ./findXmlModuleWithAttribute.ps1 `
            -File "${{ needs.prepare.outputs.projectPath }}" `
            -Tag "${{ matrix.check.tag }}" `
            -Attribute "${{ matrix.check.attribute }}" `
            -Value "${{ matrix.check.value }}"

#  validate:
#    runs-on: windows-latest
#    needs: prepare

#    steps:
#      - name: Checkout repo
#        uses: actions/checkout@v4

#      - name: Download script artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: check-script

      - name: version as defined
        shell: pwsh
        run: |
          & ./findXmlModuleWithAttribute.ps1 `
            -File "${{ needs.prepare.outputs.projectPath }}" `
            -Tag "TcSmProject" `
            -Attribute "TcVersion" `
            -Value "3.1.4024.65"

      - name: version as defined
        shell: pwsh
        run: |
          & ./findXmlModuleWithAttribute.ps1 `
            -File "${{ needs.prepare.outputs.projectPath }}" `
            -Tag "TcSmProject" `
            -Attribute "TcVersionFixed" `
            -Value "true"

      - name: tmc file active 
        shell: pwsh
        run: |
          & ./findXmlModuleWithAttribute.ps1 `
            -File "${{ needs.prepare.outputs.projectPath }}" `
            -Tag "Project" `
            -Attribute "CopyTmcToTarget" `
            -Value "true"
